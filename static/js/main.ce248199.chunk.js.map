{"version":3,"sources":["inkling-logo.png","Images/Veda.JPG","Images/Talia.JPG","Images/Cooper.jpg","Images/Maya.jpeg","Images/Marco.jpeg","Images/Sam.jpeg","About.js","Code.js","Team.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","id","Code","Card","Group","centered","style","width","Content","Header","Meta","Description","Team","margin","Image","src","sam","wrapped","ui","extra","href","marginLeft","cooper","talia","marginBottom","marco","maya","veda","NavBar","Navbar","collapseOnSelect","fixed","expand","variant","Brand","Toggle","aria-controls","Collapse","Nav","Link","App","Grid","stackable","textAlign","relaxed","Row","columns","Column","logo","marginTop","class","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ce248199.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/inkling-logo.c31de034.png\";","module.exports = __webpack_public_path__ + \"static/media/Veda.760ee90d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Talia.aecfe92e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/Cooper.c22a6a67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Maya.24b23f1a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Marco.f2424618.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Sam.73fbfb4e.jpeg\";","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"About\">\n      <h1 id=\"about\">About</h1>\n      <p>\n        You may not know this, but you basically already know Inkling. Inkling\n        is a programming language that allows you to follow your gut. Do what\n        makes sense to you while learning how to shift your thinking to become a\n        better programmer and thinker. The language works to let you speak the\n        language you code.\n      </p>\n      <p>\n        When the inkling team first met, we had a purpose. Each of us remembers\n        the first time we learned to code. We all began with different\n        languages- some Java, some Python, some C++, and more. While these\n        languages are all great languages with special utilities, we wanted to\n        create a language that would ease new computer scientists into\n        programming to gain a strong foundation in coding. We drew upon our\n        personal experiences as beginner programmers to build a language that\n        was intuitive. Our goal is to encourage you to strengthen your skills\n        and grow as a programmer with an intuitive beginner language. Why?\n        Because you can.\n      </p>\n      <p>Type what you want to say. Where will your inkling take you today?</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Card } from \"semantic-ui-react\";\n\nfunction Code() {\n  return (\n    <div className=\"Code\">\n      <h1>\n        {\" \"}\n        <a id=\"code\">Code Examples</a>\n      </h1>\n      <Card.Group centered>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Find Factorial</Card.Header>\n            <Card.Meta>Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`function findFactorial(x is Num) is Num {`}\n                <br />\n                {`  if(x == 0 or x == 1) {`}\n                <br />\n                {`    gimme x `}\n                <br />\n                {`  }`}\n                <br />\n                {`  gimme x * findFactorial(x - 1)`}\n                <br />\n                {`}`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Fizzbuzz</Card.Header>\n            <Card.Meta>Void Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`function fizzbuzz(x is Num) is Void {`}\n                <br />\n                {`  for i in range(0,x) {`}\n                <br />\n                {`    if (i%3 == 0 and i%5 == 0) {`}\n                <br />\n                {`      display \"fizzbuzz\"`}\n                <br />\n                {`    } else if (i % 3 == 0) {`}\n                <br />\n                {`      display \"fizz\"`}\n                <br />\n                {`    } else if (i % 5 == 0) {`}\n                <br />\n                {`      display \"buzz\"`}\n                <br />\n                {`    } else {`}\n                <br />\n                {`      display i`}\n                <br />\n                {`      }`} <br />\n                {`    }`} <br />\n                {`  }`} <br />\n                {`}`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Negative Checker</Card.Header>\n            <Card.Meta>Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`function negativeChecker(x is Num) is Bool {`}\n                <br />\n                {`  gimme x < 0 ? true : false`}\n                <br />\n                {`}`}\n                <br />\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n      <Card.Group centered>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Find First Odd Number</Card.Header>\n            <Card.Meta>Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`function findFirstOdd(x is Num) is Num {`}\n                <br />\n                {`  for i in range(0, x) {`}\n                <br />\n                {`   if(i % 2 != 0) {`}\n                <br />\n                {`      gimme i}`}\n                <br />\n                {`    }`}\n                <br />\n                {`  }`}\n                <br />\n                {`}`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Return List Function</Card.Header>\n            <Card.Meta>Constant Arrow Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`constantListFunc is always () is List<Text> => {`}\n                <br />\n                {`  sampleList is List<Text> [\"inkling\", \"is\", \"the\", \"best\"]`}\n                <br />\n                {`  gimme sampleList`}\n                <br />\n                {`}`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Is Prime</Card.Header>\n            <Card.Meta>While Loop Function</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`function isPrime(x is Num) is Num {`}\n                <br />\n                {`  start is Num 2`}\n                <br />\n                {`  while(start <= x^0.5) {`}\n                <br />\n                {`    if (x % start++ < 1) {`}\n                <br />\n                {`      gimme false`}\n                <br />\n                {`    }`}\n                <br />\n                {`  }`}\n                <br />\n                {`  gimme x > 1`}\n                <br />\n                {`}`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n      <Card.Group>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Lists</Card.Header>\n            <Card.Description>\n              <pre>\n                {`ourList is List<Text> [\"this\", \"is\", \"a\", \"legal\", \"list\", \"in\", \"Inkling\"]`}\n                <br />\n                <br />\n                {`aListOfNums is List<Text> [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]`}\n                <br />\n                <br />\n                {`aListOfNums[0] is 0`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Sets</Card.Header>\n            <Card.Description>\n              <pre>\n                {`ourSet is List<Text> {\"this\", \"is\", \"a\", \"legal\", \"set\", \"in\", \"Inkling\"}`}\n                <br />\n                <br />\n                {`aSetOfNums is List<Num> {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"}`}\n                <br />\n                <br />\n                {`aSetOfNums[0] is 0`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Dictionaries</Card.Header>\n            <Card.Description>\n              <pre>\n                {`ourDict is Dict<Num, Text> {0: \"this\", 1: \"is\", 2: \"a\", 3: \"legal\", 4: \"dict\", 5: \"in\", 6: \"Inkling\"}`}\n                <br />\n                <br />\n                {`aDictOfNums is Dict<Num, Num> {0: 1, 1: 2, 2: 3, 3: 4, 4: 5, 5: 6, 6: 7}`}\n                <br />\n                <br />\n                {`aDictOfNums[0] is 0`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n      <Card.Group>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Variable Assignment</Card.Header>\n            <Card.Description>\n              <pre>\n                {`x is Num 7`}\n                <br />\n                <br />\n                {`bestProfessor is Text \"Toal`}\n                <br />\n                <br />\n                {`trueVal is Bool negativeChecker(5)`}\n                <br />\n                <br />\n                {`five is true ? 5: 6`}\n                <br />\n                <br />\n                {`testNum is Num none`}\n                <br />\n                <br />\n                {`greeting is always Text  \"Hello\"`}\n                <br />\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Semantic Errors</Card.Header>\n            <Card.Description>\n              <pre>\n                {`1 < 2 and 3 > 5 ? \"hello\" : \"goodbye\"`}\n                <br />\n                {/* <br /> */}\n                {`function fun1 (h is Num, i is Num) is Void {\\n\\tdisplay \"hello\"\\n\\tgimme 4\\n}`}\n                <br />\n                {/* <br /> */}\n                {`f is Num 5\\nfunction fun2 (h is Num, i is Num) is Void {\\n\\tdisplay x\\n\\tgimme 4\\n}`}\n                <br />\n                {/* <br /> */}\n                {`i is always Num 5\\ni is 3`}\n                <br />\n                {/* <br /> */}\n                {`k is Num 5\\nx[0]`}\n                <br />\n                {/* <br /> */}\n                {`function fun5 (x is Num) is Text {\\n\\tgimme x + 2\\n}`}\n                <br />\n                {/* <br /> */}\n                {`o is Num 5\\ndisplay !o`}\n                <br />\n                {/* <br /> */}\n                {`q is Bool true\\ndisplay -q`}\n                <br />\n                {/* <br /> */}\n                {`function fun3 (h is Num, i is Num) is Void {\\n\\tx is Num 5\\n\\tgimme 4\\t}\\ndisplay x`}\n                {/* <br /> */}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n        <Card style={{ width: \"500px\" }}>\n          <Card.Content>\n            <Card.Header>Comments</Card.Header>\n            <Card.Meta>Single-Line</Card.Meta>\n            <Card.Description>\n              <pre>\n                {`btw: this is a single-line comment!`}\n                <br />\n                <br />\n                <Card.Meta>Multi-Line</Card.Meta>\n                {`fyi: This is\n                    a multi-line\n                                Comment! :xoxo`}\n              </pre>{\" \"}\n            </Card.Description>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </div>\n  );\n}\n\nexport default Code;\n","import React from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport veda from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Veda.JPG\";\nimport talia from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Talia.JPG\";\nimport cooper from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Cooper.jpg\";\nimport maya from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Maya.jpeg\";\nimport marco from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Marco.jpeg\";\nimport sam from \"/Users/taliabahar/Desktop/Code/Inkling/src/Images/Sam.jpeg\";\n\nfunction Team() {\n  return (\n    <div className=\"Team\">\n      <h1>\n        <a id=\"team\">Meet the Team </a>{\" \"}\n      </h1>\n      <Card.Group centered>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={sam} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Sam Gibson</Card.Header>\n            <Card.Meta>Computer Science</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/sgibson1682\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/sam-gibson-038b8816a/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={cooper} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Cooper LaRhette</Card.Header>\n            <Card.Meta>Computer Science</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/coopslarhette\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/larhette/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={talia} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Talia Bahar</Card.Header>\n            <Card.Meta>Computer Science/Graphic Arts</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/taliabahar\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/talia-bahar-b65920145/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n      <Card.Group centered style={{ marginBottom: \"40px\" }}>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={marco} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Marco Bernardini</Card.Header>\n            <Card.Meta>Computer Science</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/mb0606\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/marco-berardini-186a7725/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={maya} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Maya Pegler-Gordon</Card.Header>\n            <Card.Meta>Computer Science/Animation</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/mpeglerg\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/maya-pegler-gordon/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n        <Card style={{ margin: \"15px 30px\" }}>\n          <Image src={veda} wrapped ui={false} />\n          <Card.Content>\n            <Card.Header>Veda Ashok</Card.Header>\n            <Card.Meta>Computer Science</Card.Meta>\n          </Card.Content>\n          <Card.Content extra>\n            <a href=\"https://github.com/Veda-Ashok\">GitHub</a>\n            <a\n              href=\"https://www.linkedin.com/in/veda-ashok/\"\n              style={{ marginLeft: \"60%\" }}\n            >\n              LinkedIn\n            </a>\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    </div>\n  );\n}\n\nexport default Team;\n","import React from \"react\";\n// import { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nfunction NavBar() {\n  return (\n    <div className=\"NavBar\">\n      <Navbar\n        className=\"Nav\"\n        collapseOnSelect\n        fixed=\"top\"\n        expand=\"lg\"\n        variant=\"dark\"\n      >\n        <Navbar.Brand id=\"brand\" href=\"#home\">\n          Inkling\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#about\">About</Nav.Link>\n            <Nav.Link href=\"#code\">Examples</Nav.Link>\n            <Nav.Link href=\"#team\">Meet the Team</Nav.Link>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"https://github.com/mpeglerg/Inkling\">\n              Github\n            </Nav.Link>\n            <Nav.Link href=\"https://github.com/mpeglerg/Inkling/blob/master/grammar/Inkling.ohm\">\n              Grammar\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport logo from \"./inkling-logo.png\";\nimport { Grid } from \"semantic-ui-react\";\nimport About from \"./About\";\nimport Code from \"./Code\";\nimport Team from \"./Team\";\nimport NavBar from \"./NavBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import { Navbar, Nav } from \"react-bootstrap\";\n\nfunction App() {\n  return (\n    <div className=\"App\" id=\"home\">\n      <NavBar></NavBar>\n      <Grid stackable textAlign=\"center\" relaxed>\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <div id=\"welcome\">\n              <h2> > Welcome. Where will your inkling take you today?</h2>\n              {/* <h2>> Welcome to Inkling.</h2> <h2>Let's get coding!</h2> */}\n            </div>\n          </Grid.Column>\n          <Grid.Column>\n            <img className=\"logo\" src={logo}></img>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row style={{ marginTop: \"90px\" }} className=\"row\" columns={1}>\n          <About id=\"about\"></About>\n        </Grid.Row>\n        <Grid.Row style={{ marginTop: \"90px\" }} className=\"row\">\n          <Code></Code>\n        </Grid.Row>\n        <Grid.Row style={{ marginTop: \"90px\" }} className=\"row\">\n          <Team id=\"team\"></Team>\n        </Grid.Row>\n      </Grid>\n      <p class=\"footer\">Copyright &copy; 2020 Inkling. All Rights Reserved.</p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}